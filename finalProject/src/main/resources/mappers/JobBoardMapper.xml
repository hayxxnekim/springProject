<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.avo.www.repository.JobBoardDAO">

	<insert id="post" parameterType="pbvo">
		insert into product(pro_title,pro_email,pro_nick_name,pro_content,pro_payment,pro_price,pro_category,pro_menu,pro_sido,pro_sigg,pro_emd,pro_full_addr)
		values(#{proTitle},#{proEmail},#{proNickName},#{proContent},#{proPayment},#{proPrice},'job',#{proMenu},#{proSido},#{proSigg},#{proEmd},#{proFullAddr})
	</insert>
	
	<select id="selectOneBno" resultType="long">
	 	select max(pro_bno) from product;
	</select>
	
	<select id="detail" parameterType="long" resultType="pbvo">
		select * from product where pro_bno = #{proBno}
	</select>
	
	<update id="modify" parameterType="pbvo">
		update product set pro_title = #{proTitle}, pro_content = #{proContent}, pro_price = #{proPrice}, pro_menu = #{proMenu} where pro_bno = #{proBno}
	</update>

	<update id="readCount">
  		update product set pro_read_cnt = pro_read_cnt + #{cnt} where pro_bno = #{proBno}
	</update>
 	<select id="getList" resultType="pbvo">
		select * from product where pro_is_del = 'N' and pro_category = 'job' order by pro_re_at DESC
	</select>
 	<select id="getHotList" resultType="pbvo">
		select * from product where pro_is_del = 'N' and pro_category = 'job' order by pro_read_cnt DESC
	</select>
	
	<select id="getMoreList" resultType="pbvo">
		select * from product where pro_is_del = 'N' and pro_category = 'job' 
		<include refid="jobSelect"></include>
		limit #{pageStart}, #{qty}
	</select>
	
	<insert id="jobLike" parameterType="long">
		insert into product pro_like_cnt = pro_like_cnt + 1
	</insert>
	
	<update id="delete">
  		update product set pro_is_del = 'Y' where pro_bno = #{proBno}
	</update>
	
   <update id="updateLikeCnt">
      update product set pro_like_cnt = pro_like_cnt + #{i} where pro_bno = #{livo.liBno}
   </update>
   
   <select id="checkLikeCnt" resultType="int">
   		select pro_like_cnt from product where pro_bno = #{proBno}
   </select>
   
   <select id="getTotalCount" resultType="int">
		select count(pro_bno) from product where pro_is_del = "N" and pro_category = 'job'
		<include refid="count"></include>
   </select>
   
   <update id="updateFileCnt" parameterType="java.util.Map">
		update product set pro_file_cnt = #{proFileCnt} where pro_bno = #{bno}
   </update>
	
<!--
 	<select id="listPaging" resultType="pbvo">
		select * from product
		where pro_is_del = "N" and pro_category = 'job'
		세부카테고리 지정했을 경우 조건 추가
	    <include refid="search"></include>		
  		order by pro_re_at DESC limit #{pageStart}, #{qty}
	</select> 
	-->
<sql id="count">
		<if test="type != 'undefined' and type != '전체'">
		AND pro_menu = #{type}
		</if>
		<if test="sorted != null">
			<choose>
				<when test="sorted == 'newest'.toString()">
					order by pro_re_at DESC
				</when>
				<when test="sorted == 'oldest'.toString()">
					order by pro_re_at ASC
				</when>
				<when test="sorted == 'hotest'.toString()">
					order by pro_read_cnt DESC
				</when>
			</choose>
		</if>
		<if test="sorted == 'undefined' ">
			order by pro_re_at DESC
		</if>
</sql>
<sql id="jobSelect">
	<if test="type != null">
        <trim prefix="and (" suffix=")" prefixOverrides="OR">
            <trim prefix="OR">
                <choose>
                    <when test="type == 'food'.toString()">
                        pro_menu like 'food'
                    </when>
                    <when test="type == 'shop'.toString()">
                        pro_menu like 'shop'
                    </when>
                    <when test="type == 'service'.toString()">
                        pro_menu like 'service'
                    </when>
                    <when test="type == 'office'.toString()">
                        pro_menu like 'office'
                    </when>
                    <when test="type == 'product'.toString()">
                        pro_menu like 'product'
                    </when>
                    <when test="type == 'driver'.toString()">
                        pro_menu like 'driver'
                    </when>
                    <when test="type == 'education'.toString()">
                        pro_menu like 'education'
                    </when>
                    <when test="type == 'etc'.toString()">
                        pro_menu like 'etc'
                    </when>				
                </choose>
            </trim>
        </trim>
    </if>
	<if test="sorted != null">
		<choose>
			<when test="sorted == 'newest'.toString()">
				order by pro_re_at DESC
			</when>
			<when test="sorted == 'oldest'.toString()">
				order by pro_re_at ASC
			</when>
			<when test="sorted == 'hotest'.toString()">
				order by pro_read_cnt DESC
			</when>
		</choose>
	</if>
	<if test="sorted == 'undefined'">
		order by pro_re_at DESC
	</if>

</sql>

<!-- index용 -->
<select id="getJobList" resultType="com.avo.www.domain.ProductBoardVO">
	select * from product 
    where pro_category = 'job' AND pro_is_del = 'N'
    order by pro_bno desc
	limit 0, 6
</select>


</mapper>